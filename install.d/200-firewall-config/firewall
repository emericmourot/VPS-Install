#!/bin/bash
declare -i debug=0
program="${0##*/}"

IPT="/sbin/iptables"
## Failsafe - die if /sbin/iptables not found
[ ! -x "$IPT" ] && { echo "$0: \"${IPT}\" command not found."; exit 1; }

# git config --global url. "https://".insteadOf "git://"


function _stop() {
    echo "Stopping firewall and allowing everyone..."

    $IPT -P INPUT ACCEPT
    $IPT -P FORWARD ACCEPT
    $IPT -P OUTPUT ACCEPT
    $IPT -F
    $IPT -X
    $IPT -t nat -F
    $IPT -t nat -X
    $IPT -t mangle -F
    $IPT -t mangle -X
    $IPT -t raw -F
    $IPT -t raw -X

    exit 0
}

function _start() {

    echo "Starting firewall and restricting access..."

    # Server IP
    SERVER_IP="$(ip addr show eth0 | grep 'inet ' | cut -f2 | awk '{ print $2}')"

    # Your DNS servers you use: cat /etc/resolv.conf
    DNS_SERVER="213.186.33.99"

    # Allow connections to this package servers
    PACKAGE_SERVER="api.twitter.com bower.herokuapp.com registry.npmjs.org rpm.nodesource.com ikt.pm2.io github.com bitbucket.org nova.clouds.archive.ubuntu.com security.ubuntu.com"
    GITHUB_SERVER="192.30.252.128 192.30.252.129 192.30.252.130 192.30.252.131"

    echo "flush iptable rules"
    $IPT -F
    $IPT -X
    $IPT -t nat -F
    $IPT -t nat -X
    $IPT -t mangle -F
    $IPT -t mangle -X

    echo "Set default policy to 'DROP'"
    $IPT -P INPUT   DROP
    $IPT -P FORWARD DROP
    $IPT -P OUTPUT  DROP

    ## This should be one of the first rules.
    ## so dns lookups are already allowed for your other rules
    for ip in $DNS_SERVER
    do
        echo "Allowing DNS lookups (tcp, udp port 53) to server '$ip'"
        $IPT -A OUTPUT -p udp -d $ip --dport 53 -m state --state NEW,ESTABLISHED -j ACCEPT
        $IPT -A INPUT  -p udp -s $ip --sport 53 -m state --state ESTABLISHED     -j ACCEPT
        $IPT -A OUTPUT -p tcp -d $ip --dport 53 -m state --state NEW,ESTABLISHED -j ACCEPT
        $IPT -A INPUT  -p tcp -s $ip --sport 53 -m state --state ESTABLISHED     -j ACCEPT
    done

    echo "allow all and everything on localhost"
    $IPT -A INPUT -i lo -j ACCEPT
    $IPT -A OUTPUT -o lo -j ACCEPT

    for ip in $PACKAGE_SERVER
    do
        echo "Allow connection to '$ip' on port 21"
        $IPT -A OUTPUT -p tcp -d "$ip" --dport 21  -m state --state NEW,ESTABLISHED -j ACCEPT
        $IPT -A INPUT  -p tcp -s "$ip" --sport 21  -m state --state ESTABLISHED     -j ACCEPT

        echo "Allow connection to '$ip' on port 80"
        $IPT -A OUTPUT -p tcp -d "$ip" --dport 80  -m state --state NEW,ESTABLISHED -j ACCEPT
        $IPT -A INPUT  -p tcp -s "$ip" --sport 80  -m state --state ESTABLISHED     -j ACCEPT

        echo "Allow connection to '$ip' on port 443"
        $IPT -A OUTPUT -p tcp -d "$ip" --dport 443 -m state --state NEW,ESTABLISHED -j ACCEPT
        $IPT -A INPUT  -p tcp -s "$ip" --sport 443 -m state --state ESTABLISHED     -j ACCEPT
    done

    for ip in $GITHUB_SERVER
    do
            echo "Allow connection to '$ip' on port 9418"
            $IPT -A OUTPUT -p tcp -d "$ip" --dport 9418 -m state --state NEW,ESTABLISHED -j ACCEPT
            $IPT -A INPUT  -p tcp -s "$ip" --sport 9418 -m state --state ESTABLISHED     -j ACCEPT
    done

    #######################################################################################################
    ## Global iptable rules. Not IP specific

    echo "Allowing new and established incoming connections to port 21, 80, 443"
    $IPT -A INPUT  -p tcp -m multiport --dports 22,80,443 -m state --state NEW,ESTABLISHED -j ACCEPT
    $IPT -A OUTPUT -p tcp -m multiport --sports 22,80,443 -m state --state ESTABLISHED     -j ACCEPT

    echo "Allow all outgoing connections to port 22"
    $IPT -A OUTPUT -p tcp --dport 22 -m state --state NEW,ESTABLISHED -j ACCEPT
    $IPT -A INPUT  -p tcp --sport 22 -m state --state ESTABLISHED     -j ACCEPT

    echo "Allow all outgoing connections to port 587 (mail)"
    $IPT -A OUTPUT -p tcp --dport 587 -m state --state NEW,ESTABLISHED -j ACCEPT
    $IPT -A INPUT  -p tcp --sport 587 -m state --state ESTABLISHED     -j ACCEPT

    echo "Allow outgoing icmp connections (pings,...)"
    $IPT -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT
    $IPT -A INPUT  -p icmp -m state --state ESTABLISHED,RELATED     -j ACCEPT

    echo "Allow outgoing connections to port 123 (ntp syncs)"
    $IPT -A OUTPUT -p udp --dport 123 -m state --state NEW,ESTABLISHED -j ACCEPT
    $IPT -A INPUT  -p udp --sport 123 -m state --state ESTABLISHED     -j ACCEPT

    # Log before dropping
    $IPT -A INPUT  -j LOG  -m limit --limit 12/min --log-level 4 --log-prefix 'IP INPUT drop: '
    $IPT -A INPUT  -j DROP

    $IPT -A OUTPUT -j LOG  -m limit --limit 12/min --log-level 4 --log-prefix 'IP OUTPUT drop: '
    $IPT -A OUTPUT -j DROP

    exit 0
}

if [ -z "$1" ] ; then
    _start
    exit 0
fi

# parse args from command line
while [ "$1" != "" ] ; do

    case "$1" in
        -h|-help)
	        #echo "Usage: $program [options] shortname hostname username sshport"
            echo "Usage: $program [options] set|unset"
            echo "  Options:"
            echo "      -d     : debug mode on."
            echo "      -h     : this help."
            echo ""
            exit 0
            ;;

        -d|-debug)
            debug=1;
            shift
            ;;

        start|set)
            _start
            shift
            ;;

        stop|unset)
            _stop
            shift
            ;;

        show)
            $IPT -L -n -v
            shift
            ;;

        *)
            _start
            shift
            ;;

    esac

done